//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Cisst
{
    [Serializable]
    public class PrmCartesianImpedanceGainsMsg : Message
    {
        public const string k_RosMessageName = "cisst_msgs/prmCartesianImpedanceGains";
        public override string RosMessageName => k_RosMessageName;

        public HeaderMsg header;
        //  vf pos & ori
        public Geometry.QuaternionMsg ForceOrientation;
        public Geometry.Vector3Msg ForcePosition;
        public Geometry.QuaternionMsg TorqueOrientation;
        //  force gains
        public Geometry.Vector3Msg PosDeadbandPos;
        public Geometry.Vector3Msg PosDeadbandNeg;
        public Geometry.Vector3Msg PosStiffPos;
        public Geometry.Vector3Msg PosStiffNeg;
        public Geometry.Vector3Msg PosDampingPos;
        public Geometry.Vector3Msg PosDampingNeg;
        public Geometry.Vector3Msg ForceBiasPos;
        public Geometry.Vector3Msg ForceBiasNeg;
        //  torque gains
        public Geometry.Vector3Msg OriDeadbandPos;
        public Geometry.Vector3Msg OriDeadbandNeg;
        public Geometry.Vector3Msg OriStiffPos;
        public Geometry.Vector3Msg OriStiffNeg;
        public Geometry.Vector3Msg OriDampingPos;
        public Geometry.Vector3Msg OriDampingNeg;
        public Geometry.Vector3Msg TorqueBiasPos;
        public Geometry.Vector3Msg TorqueBiasNeg;

        public PrmCartesianImpedanceGainsMsg()
        {
            this.header = new HeaderMsg();
            this.ForceOrientation = new Geometry.QuaternionMsg();
            this.ForcePosition = new Geometry.Vector3Msg();
            this.TorqueOrientation = new Geometry.QuaternionMsg();
            this.PosDeadbandPos = new Geometry.Vector3Msg();
            this.PosDeadbandNeg = new Geometry.Vector3Msg();
            this.PosStiffPos = new Geometry.Vector3Msg();
            this.PosStiffNeg = new Geometry.Vector3Msg();
            this.PosDampingPos = new Geometry.Vector3Msg();
            this.PosDampingNeg = new Geometry.Vector3Msg();
            this.ForceBiasPos = new Geometry.Vector3Msg();
            this.ForceBiasNeg = new Geometry.Vector3Msg();
            this.OriDeadbandPos = new Geometry.Vector3Msg();
            this.OriDeadbandNeg = new Geometry.Vector3Msg();
            this.OriStiffPos = new Geometry.Vector3Msg();
            this.OriStiffNeg = new Geometry.Vector3Msg();
            this.OriDampingPos = new Geometry.Vector3Msg();
            this.OriDampingNeg = new Geometry.Vector3Msg();
            this.TorqueBiasPos = new Geometry.Vector3Msg();
            this.TorqueBiasNeg = new Geometry.Vector3Msg();
        }

        public PrmCartesianImpedanceGainsMsg(HeaderMsg header, Geometry.QuaternionMsg ForceOrientation, Geometry.Vector3Msg ForcePosition, Geometry.QuaternionMsg TorqueOrientation, Geometry.Vector3Msg PosDeadbandPos, Geometry.Vector3Msg PosDeadbandNeg, Geometry.Vector3Msg PosStiffPos, Geometry.Vector3Msg PosStiffNeg, Geometry.Vector3Msg PosDampingPos, Geometry.Vector3Msg PosDampingNeg, Geometry.Vector3Msg ForceBiasPos, Geometry.Vector3Msg ForceBiasNeg, Geometry.Vector3Msg OriDeadbandPos, Geometry.Vector3Msg OriDeadbandNeg, Geometry.Vector3Msg OriStiffPos, Geometry.Vector3Msg OriStiffNeg, Geometry.Vector3Msg OriDampingPos, Geometry.Vector3Msg OriDampingNeg, Geometry.Vector3Msg TorqueBiasPos, Geometry.Vector3Msg TorqueBiasNeg)
        {
            this.header = header;
            this.ForceOrientation = ForceOrientation;
            this.ForcePosition = ForcePosition;
            this.TorqueOrientation = TorqueOrientation;
            this.PosDeadbandPos = PosDeadbandPos;
            this.PosDeadbandNeg = PosDeadbandNeg;
            this.PosStiffPos = PosStiffPos;
            this.PosStiffNeg = PosStiffNeg;
            this.PosDampingPos = PosDampingPos;
            this.PosDampingNeg = PosDampingNeg;
            this.ForceBiasPos = ForceBiasPos;
            this.ForceBiasNeg = ForceBiasNeg;
            this.OriDeadbandPos = OriDeadbandPos;
            this.OriDeadbandNeg = OriDeadbandNeg;
            this.OriStiffPos = OriStiffPos;
            this.OriStiffNeg = OriStiffNeg;
            this.OriDampingPos = OriDampingPos;
            this.OriDampingNeg = OriDampingNeg;
            this.TorqueBiasPos = TorqueBiasPos;
            this.TorqueBiasNeg = TorqueBiasNeg;
        }

        public static PrmCartesianImpedanceGainsMsg Deserialize(MessageDeserializer deserializer) => new PrmCartesianImpedanceGainsMsg(deserializer);

        private PrmCartesianImpedanceGainsMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            this.ForceOrientation = Geometry.QuaternionMsg.Deserialize(deserializer);
            this.ForcePosition = Geometry.Vector3Msg.Deserialize(deserializer);
            this.TorqueOrientation = Geometry.QuaternionMsg.Deserialize(deserializer);
            this.PosDeadbandPos = Geometry.Vector3Msg.Deserialize(deserializer);
            this.PosDeadbandNeg = Geometry.Vector3Msg.Deserialize(deserializer);
            this.PosStiffPos = Geometry.Vector3Msg.Deserialize(deserializer);
            this.PosStiffNeg = Geometry.Vector3Msg.Deserialize(deserializer);
            this.PosDampingPos = Geometry.Vector3Msg.Deserialize(deserializer);
            this.PosDampingNeg = Geometry.Vector3Msg.Deserialize(deserializer);
            this.ForceBiasPos = Geometry.Vector3Msg.Deserialize(deserializer);
            this.ForceBiasNeg = Geometry.Vector3Msg.Deserialize(deserializer);
            this.OriDeadbandPos = Geometry.Vector3Msg.Deserialize(deserializer);
            this.OriDeadbandNeg = Geometry.Vector3Msg.Deserialize(deserializer);
            this.OriStiffPos = Geometry.Vector3Msg.Deserialize(deserializer);
            this.OriStiffNeg = Geometry.Vector3Msg.Deserialize(deserializer);
            this.OriDampingPos = Geometry.Vector3Msg.Deserialize(deserializer);
            this.OriDampingNeg = Geometry.Vector3Msg.Deserialize(deserializer);
            this.TorqueBiasPos = Geometry.Vector3Msg.Deserialize(deserializer);
            this.TorqueBiasNeg = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.ForceOrientation);
            serializer.Write(this.ForcePosition);
            serializer.Write(this.TorqueOrientation);
            serializer.Write(this.PosDeadbandPos);
            serializer.Write(this.PosDeadbandNeg);
            serializer.Write(this.PosStiffPos);
            serializer.Write(this.PosStiffNeg);
            serializer.Write(this.PosDampingPos);
            serializer.Write(this.PosDampingNeg);
            serializer.Write(this.ForceBiasPos);
            serializer.Write(this.ForceBiasNeg);
            serializer.Write(this.OriDeadbandPos);
            serializer.Write(this.OriDeadbandNeg);
            serializer.Write(this.OriStiffPos);
            serializer.Write(this.OriStiffNeg);
            serializer.Write(this.OriDampingPos);
            serializer.Write(this.OriDampingNeg);
            serializer.Write(this.TorqueBiasPos);
            serializer.Write(this.TorqueBiasNeg);
        }

        public override string ToString()
        {
            return "PrmCartesianImpedanceGainsMsg: " +
            "\nheader: " + header.ToString() +
            "\nForceOrientation: " + ForceOrientation.ToString() +
            "\nForcePosition: " + ForcePosition.ToString() +
            "\nTorqueOrientation: " + TorqueOrientation.ToString() +
            "\nPosDeadbandPos: " + PosDeadbandPos.ToString() +
            "\nPosDeadbandNeg: " + PosDeadbandNeg.ToString() +
            "\nPosStiffPos: " + PosStiffPos.ToString() +
            "\nPosStiffNeg: " + PosStiffNeg.ToString() +
            "\nPosDampingPos: " + PosDampingPos.ToString() +
            "\nPosDampingNeg: " + PosDampingNeg.ToString() +
            "\nForceBiasPos: " + ForceBiasPos.ToString() +
            "\nForceBiasNeg: " + ForceBiasNeg.ToString() +
            "\nOriDeadbandPos: " + OriDeadbandPos.ToString() +
            "\nOriDeadbandNeg: " + OriDeadbandNeg.ToString() +
            "\nOriStiffPos: " + OriStiffPos.ToString() +
            "\nOriStiffNeg: " + OriStiffNeg.ToString() +
            "\nOriDampingPos: " + OriDampingPos.ToString() +
            "\nOriDampingNeg: " + OriDampingNeg.ToString() +
            "\nTorqueBiasPos: " + TorqueBiasPos.ToString() +
            "\nTorqueBiasNeg: " + TorqueBiasNeg.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
